version: '3.9'

services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: myapp-server
    container_name: myapp-node-server
    command: npm run start
    volumes:
      - ./server/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
    env_file: ./server/.env
    environment:
      - NODE_ENV=development
    networks:
      - app-network
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment: 
      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_PASSWORD}"
      MONGO_INITDB_DATABASE: "${MONGODB_DATABASE_NAME}"
    env_file:
      - ./server/.env
    volumes:
      - mongo-data:/data/db # Mount the mongo-data volume to /data/db in the container
    ports:
      - "27017:27017"
    networks:
      - app-network
    # command: mongod --bind_ip 0.0.0.0
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: myapp-client
    env_file:
      - ./client/.env
    container_name: myapp-react-client
    command: npm run start
    volumes:
      - ./client/:/usr/app
      - /usr/app/node_modules
    depends_on:
      - server
    ports:
      - "3000:3000"
    networks:
      - app-network
  # debug:
  #   image: alpine
  #   command: sh -c 'env'
  #   depends_on:
  #     - mongo
  #   env_file:
  #     - ./server/.env

volumes:
    mongo-data:
    web-root:
      driver: local

networks:
    app-network:
        driver: bridge
